{
  "openapi": "3.0.3",
  "info": {
    "title": "API de KALEV",
    "description": "Documentación de la API para la plataforma KALEV - App Móvil y Dashboard Educativo.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://kalev-apiv2-production.up.railway.app/api/v1",
      "description": "Producción - Railway"
    },
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Desarrollo local"
    }
  ],

  "paths": {
    "/usuarios/register": {
      "post": {
        "tags": ["Usuarios"],
        "summary": "Registrar un nuevo usuario",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre_usuario": {
                    "type": "string",
                    "example": "Juan"
                  },
                  "ap_paterno": {
                    "type": "string",
                    "example": "Pérez"
                  },
                  "ap_materno": {
                    "type": "string",
                    "example": "Gómez"
                  },
                  "correo": {
                    "type": "string",
                    "example": "juan@example.com"
                  },
                  "telefono": {
                    "type": "string",
                    "example": "1234567890"
                  },
                  "id_rol": {
                    "type": "integer",
                    "example": 1
                  },
                  "contrasenia": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": [
                  "nombre_usuario",
                  "ap_paterno",
                  "correo",
                  "telefono",
                  "id_rol",
                  "contrasenia"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario registrado correctamente"
          },
          "400": {
            "description": "Error en validación"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/usuarios/login": {
      "post": {
        "tags": ["Usuarios"],
        "summary": "Iniciar sesión con correo y contraseña",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "correo": {
                    "type": "string",
                    "example": "juan@example.com"
                  },
                  "contrasenia": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": ["correo", "contrasenia"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso"
          },
          "401": {
            "description": "Credenciales inválidas"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/usuarios/{id}": {
      "get": {
        "tags": ["Usuarios"],
        "summary": "Obtener los detalles de un usuario por su ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      },
      "put": {
        "tags": ["Usuarios"],
        "summary": "Actualizar información de un usuario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre_usuario": {
                    "type": "string",
                    "example": "Juan Actualizado"
                  },
                  "telefono": {
                    "type": "string",
                    "example": "9876543210"
                  },
                  "correo": {
                    "type": "string",
                    "example": "nuevo_correo@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado"
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/usuarios/rol/{id_rol}": {
      "get": {
        "tags": ["Usuarios"],
        "summary": "Obtener lista de usuarios por ID de rol",
        "parameters": [
          {
            "name": "id_rol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuarios obtenidos correctamente"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/grupos": {
      "get": {
        "tags": ["Grupos"],
        "summary": "Obtener todos los grupos",
        "responses": {
          "200": {
            "description": "Lista de grupos obtenida correctamente"
          },
          "500": {
            "description": "Error interno"
          }
        }
      },
      "post": {
        "tags": ["Grupos"],
        "summary": "Crear un nuevo grupo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre_grupo": {
                    "type": "string",
                    "example": "Grupo A"
                  },
                  "id_docente": {
                    "type": "integer",
                    "example": 1
                  },
                  "id_director": {
                    "type": "integer",
                    "example": 2
                  },
                  "grado": {
                    "type": "string",
                    "example": "Primero"
                  }
                },
                "required": [
                  "nombre_grupo",
                  "id_docente",
                  "id_director",
                  "grado"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Grupo creado correctamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/grupos/{id}": {
      "get": {
        "tags": ["Grupos"],
        "summary": "Obtener un grupo por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID único del grupo"
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo encontrado"
          },
          "404": {
            "description": "Grupo no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      },
      "put": {
        "tags": ["Grupos"],
        "summary": "Actualizar información de un grupo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del grupo a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre_grupo": {
                    "type": "string",
                    "example": "Grupo B"
                  },
                  "id_docente": {
                    "type": "integer",
                    "example": 3
                  },
                  "id_director": {
                    "type": "integer",
                    "example": 5
                  },
                  "grado": {
                    "type": "string",
                    "example": "Segundo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Grupo actualizado correctamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "404": {
            "description": "Grupo no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      },
      "delete": {
        "tags": ["Grupos"],
        "summary": "Eliminar un grupo por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del grupo a eliminar"
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo eliminado correctamente"
          },
          "404": {
            "description": "Grupo no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/grupos/docente/{id_docente}": {
      "get": {
        "tags": ["Grupos"],
        "summary": "Obtener todos los grupos asignados a un docente",
        "parameters": [
          {
            "name": "id_docente",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del docente"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de grupos asociados al docente"
          },
          "404": {
            "description": "No se encontraron grupos para el docente"
          },
          "500": {
            "description": "Error al obtener los grupos del docente"
          }
        }
      }
    },
    "/grupos/director/{id_director}": {
      "get": {
        "tags": ["Grupos"],
        "summary": "Obtener todos los grupos supervisados por un director",
        "parameters": [
          {
            "name": "id_director",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del director"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de grupos supervisados por el director"
          },
          "404": {
            "description": "No se encontraron grupos para el director"
          },
          "500": {
            "description": "Error al obtener los grupos del director"
          }
        }
      }
    },
    "/grupos/grado/{grado}": {
      "get": {
        "tags": ["Grupos"],
        "summary": "Obtener todos los grupos por grado",
        "parameters": [
          {
            "name": "grado",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3ro"
            },
            "description": "Grado académico del grupo (ej. '1ro', '2do', '3ro')"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de grupos pertenecientes al grado especificado"
          },
          "404": {
            "description": "No se encontraron grupos para el grado indicado"
          },
          "500": {
            "description": "Error al obtener los grupos por grado"
          }
        }
      }
    },
    "/estudiantes": {
      "get": {
        "tags": ["Estudiantes"],
        "summary": "Obtener todos los estudiantes",
        "responses": {
          "200": {
            "description": "Lista de estudiantes obtenida correctamente"
          },
          "500": {
            "description": "Error al obtener estudiantes"
          }
        }
      },
      "post": {
        "tags": ["Estudiantes"],
        "summary": "Registrar un nuevo estudiante",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "example": "Luis"
                  },
                  "ap_paterno": {
                    "type": "string",
                    "example": "Lopez"
                  },
                  "ap_materno": {
                    "type": "string",
                    "example": "Martinez"
                  },
                  "fecha_nacimiento": {
                    "type": "string",
                    "format": "date",
                    "example": "2010-05-15"
                  },
                  "correo": {
                    "type": "string",
                    "example": "luis@gmail.com"
                  },
                  "telefono": {
                    "type": "string",
                    "example": "1234567890"
                  },
                  "id_grupo": {
                    "type": "integer",
                    "example": 3
                  }
                },
                "required": [
                  "nombre",
                  "ap_paterno",
                  "fecha_nacimiento",
                  "correo",
                  "telefono",
                  "id_grupo"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Estudiante registrado correctamente"
          },
          "400": {
            "description": "Error en validación de datos"
          },
          "500": {
            "description": "Error al registrar estudiante"
          }
        }
      }
    },
    "/estudiantes/{id}": {
      "get": {
        "tags": ["Estudiantes"],
        "summary": "Obtener los detalles de un estudiante por su ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID único del estudiante",
            "schema": {
              "type": "integer",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estudiante encontrado correctamente"
          },
          "404": {
            "description": "Estudiante no encontrado"
          },
          "500": {
            "description": "Error al obtener el estudiante"
          }
        }
      }
    },
    "/estudiantes/grupo/{id_grupo}": {
      "get": {
        "tags": ["Estudiantes"],
        "summary": "Obtener todos los estudiantes pertenecientes a un grupo específico",
        "parameters": [
          {
            "name": "id_grupo",
            "in": "path",
            "required": true,
            "description": "ID del grupo para filtrar los estudiantes",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estudiantes encontrados correctamente"
          },
          "404": {
            "description": "No se encontraron estudiantes para el grupo especificado"
          },
          "500": {
            "description": "Error al obtener los estudiantes"
          }
        }
      }
    },
    "/actividades": {
      "get": {
        "tags": ["Actividades"],
        "summary": "Obtener todas las actividades",
        "responses": {
          "200": {
            "description": "Lista de actividades obtenida correctamente"
          },
          "500": {
            "description": "Error al obtener las actividades"
          }
        }
      },
      "post": {
        "tags": ["Actividades"],
        "summary": "Crear una nueva actividad",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                
                "properties": {
                  "nombre_actividad": {
                    "type": "string",
                    "example": "Taller de Matemáticas"
                  },
                  "descripcion": {
                    "type": "string",
                    "example": "Actividad para reforzar sumas"
                  },
                  "fecha_inicio": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-04-01"
                  },
                  "fecha_fin": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-04-05"
                  },
                  "id_grupo": {
                    "type": "integer",
                    "example": 2
                  }
                },
                "required": [
                  "nombre_actividad",
                  "descripcion",
                  "fecha",
                  "id_grupo"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Actividad creada correctamente"
          },
          "400": {
            "description": "Faltan campos obligatorios"
          },
          "500": {
            "description": "Error al crear la actividad"
          }
        }
      }
    },
    "/actividades/{id}": {
      "get": {
        "tags": ["Actividades"],
        "summary": "Obtener detalles de una actividad por su ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID único de la actividad"
          }
        ],
        "responses": {
          "200": {
            "description": "Actividad encontrada"
          },
          "404": {
            "description": "Actividad no encontrada"
          },
          "500": {
            "description": "Error al obtener la actividad"
          }
        }
      }
    },
    "/actividades/estudiante/{id_estudiante}": {
      "get": {
        "tags": ["Actividades"],
        "summary": "Obtener actividades asignadas a un estudiante",
        "parameters": [
          {
            "name": "id_estudiante",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 5
            },
            "description": "ID del estudiante"
          }
        ],
        "responses": {
          "200": {
            "description": "Actividades encontradas"
          },
          "404": {
            "description": "Estudiante o actividades no encontradas"
          },
          "500": {
            "description": "Error al obtener las actividades del estudiante"
          }
        }
      }
    },
    "/juegos": {
      "get": {
        "tags": ["Juegos"],
        "summary": "Obtener todos los juegos",
        "responses": {
          "200": {
            "description": "Lista de juegos obtenida correctamente"
          },
          "500": {
            "description": "Error al obtener los juegos"
          }
        }
      },
      "post": {
        "tags": ["Juegos"],
        "summary": "Crear un nuevo juego",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre_juego": {
                    "type": "string",
                    "example": "Juego de Matemáticas"
                  },
                  "descripcion": {
                    "type": "string",
                    "example": "Juego para repasar sumas"
                  },
                  "nivel": {
                    "type": "integer",
                    "example": 1
                  },
                  "id_materia": {
                    "type": "integer",
                    "example": 1
                  },
                  "id_estilo": {
                    "type": "integer",
                    "example": 2
                  }
                },
                "required": [
                  "nombre_juego",
                  "descripcion",
                  "nivel",
                  "id_materia",
                  "id_estilo"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Juego creado correctamente"
          },
          "400": {
            "description": "Faltan campos obligatorios"
          },
          "500": {
            "description": "Error al crear el juego"
          }
        }
      }
    },
    "/juegos/{id}": {
      "get": {
        "tags": ["Juegos"],
        "summary": "Obtener detalles de un juego por su ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID del juego a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Juego encontrado"
          },
          "404": {
            "description": "Juego no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/metricas": {
      "post": {
        "tags": ["Métricas"],
        "summary": "Registrar métricas de un jugador",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_juego": {
                    "type": "integer",
                    "example": 1
                  },
                  "id_jugador": {
                    "type": "integer",
                    "example": 2
                  },
                  "puntuacion": {
                    "type": "integer",
                    "example": 80
                  },
                  "tiempo_empleado": {
                    "type": "string",
                    "description": "Tiempo en formato HH:MM:SS",
                    "example": "00:02:30"
                  },
                  "fecha_completado": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-03-23"
                  },
                  "intentos": {
                    "type": "integer",
                    "example": 3
                  },
                  "progreso_porcentaje": {
                    "type": "number",
                    "format": "float",
                    "example": 0.8
                  }
                },
                "required": [
                  "id_juego",
                  "id_jugador",
                  "puntuacion",
                  "tiempo_empleado",
                  "fecha_completado",
                  "intentos",
                  "progreso_porcentaje"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Métricas registradas correctamente"
          },
          "400": {
            "description": "Error en los datos enviados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/metricas/{id_jugador}": {
      "get": {
        "tags": ["Métricas"],
        "summary": "Obtener todas las métricas registradas por un jugador",
        "parameters": [
          {
            "name": "id_jugador",
            "in": "path",
            "required": true,
            "description": "ID único del jugador",
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Métricas del jugador obtenidas correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_metrica": {
                        "type": "integer",
                        "example": 5
                      },
                      "id_juego": {
                        "type": "integer",
                        "example": 1
                      },
                      "id_jugador": {
                        "type": "integer",
                        "example": 2
                      },
                      "puntuacion": {
                        "type": "integer",
                        "example": 80
                      },
                      "tiempo_empleado": {
                        "type": "integer",
                        "example": 120
                      },
                      "fecha_completado": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-23"
                      },
                      "intentos": {
                        "type": "integer",
                        "example": 3
                      },
                      "progreso_porcentaje": {
                        "type": "number",
                        "format": "float",
                        "example": 0.8
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No se encontraron métricas para el jugador"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/sesiones_juego": {
      "post": {
        "tags": ["Sesiones de Juego"],
        "summary": "Registrar una nueva sesión de juego",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_jugador": {
                    "type": "integer",
                    "example": 1
                  },
                  "id_juego": {
                    "type": "integer",
                    "example": 1
                  },
                  "fecha": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-03-23"
                  },
                  "duracion_juego": {
                    "type": "string",
                    "description": "Duración total de la sesión en formato HH:MM:SS",
                    "example": "00:30:00"
                  },
                  "intentos": {
                    "type": "integer",
                    "example": 2
                  },
                  "monedas_ganadas": {
                    "type": "integer",
                    "example": 50
                  }
                },
                "required": [
                  "id_jugador",
                  "id_juego",
                  "fecha",
                  "duracion_juego",
                  "intentos",
                  "monedas_ganadas"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sesión registrada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_sesion": {
                      "type": "integer",
                      "example": 10
                    },
                    "id_jugador": {
                      "type": "integer",
                      "example": 1
                    },
                    "id_juego": {
                      "type": "integer",
                      "example": 1
                    },
                    "fecha": {
                      "type": "string",
                      "format": "date",
                      "example": "2025-03-23"
                    },
                    "duracion_juego": {
                      "type": "integer",
                      "example": 30
                    },
                    "intentos": {
                      "type": "integer",
                      "example": 2
                    },
                    "monedas_ganadas": {
                      "type": "integer",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Faltan campos requeridos o formato incorrecto"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/sesiones_juego/{id_jugador}": {
      "get": {
        "tags": ["Sesiones de Juego"],
        "summary": "Obtener todas las sesiones de juego de un jugador",
        "parameters": [
          {
            "name": "id_jugador",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            },
            "description": "ID del jugador para filtrar sus sesiones de juego"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de sesiones de juego del jugador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_sesion": {
                        "type": "integer",
                        "example": 15
                      },
                      "id_jugador": {
                        "type": "integer",
                        "example": 2
                      },
                      "id_juego": {
                        "type": "integer",
                        "example": 1
                      },
                      "fecha": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-23"
                      },
                      "duracion_juego": {
                        "type": "integer",
                        "example": 45
                      },
                      "intentos": {
                        "type": "integer",
                        "example": 3
                      },
                      "monedas_ganadas": {
                        "type": "integer",
                        "example": 75
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Jugador no encontrado o sin sesiones registradas"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/compras": {
      "get": {
        "tags": ["Compras"],
        "summary": "Obtener todas las compras",
        "responses": {
          "200": {
            "description": "Lista de compras realizadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_compra": {
                        "type": "integer",
                        "example": 5
                      },
                      "id_usuario": {
                        "type": "integer",
                        "example": 12
                      },
                      "id_item": {
                        "type": "integer",
                        "example": 3
                      },
                      "cantidad": {
                        "type": "integer",
                        "example": 2
                      },
                      "costo_total": {
                        "type": "number",
                        "format": "float",
                        "example": 150.5
                      },
                      "fecha_compra": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-23T10:30:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno al obtener las compras"
          }
        }
      },
      "post": {
        "tags": ["Compras"],
        "summary": "Registrar una nueva compra",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_usuario": {
                    "type": "integer",
                    "example": 12
                  },
                  "id_item": {
                    "type": "integer",
                    "example": 3
                  },
                  "cantidad": {
                    "type": "integer",
                    "example": 2
                  },
                  "costo_total": {
                    "type": "number",
                    "format": "integer",
                    "example": 150
                  }
                },
                "required": ["id_usuario", "id_item", "cantidad", "costo_total"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Compra registrada correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_compra": {
                      "type": "integer",
                      "example": 10
                    },
                    "id_usuario": {
                      "type": "integer",
                      "example": 12
                    },
                    "id_item": {
                      "type": "integer",
                      "example": 3
                    },
                    "cantidad": {
                      "type": "integer",
                      "example": 2
                    },
                    "costo_total": {
                      "type": "number",
                      "format": "float",
                      "example": 150.5
                    },
                    "fecha_compra": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-23T10:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Faltan datos requeridos"
          },
          "500": {
            "description": "Error interno al registrar la compra"
          }
        }
      }
    },
    "/compras/{id}": {
      "get": {
        "tags": ["Compras"],
        "summary": "Obtener una compra por su ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la compra que se desea obtener"
          }
        ],
        "responses": {
          "200": {
            "description": "Compra encontrada correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_compra": {
                      "type": "integer",
                      "example": 5
                    },
                    "id_usuario": {
                      "type": "integer",
                      "example": 12
                    },
                    "id_item": {
                      "type": "integer",
                      "example": 3
                    },
                    "cantidad": {
                      "type": "integer",
                      "example": 2
                    },
                    "costo_total": {
                      "type": "number",
                      "format": "float",
                      "example": 150.5
                    },
                    "fecha_compra": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-23T10:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Compra no encontrada"
          },
          "500": {
            "description": "Error interno al obtener la compra"
          }
        }
      }
    },
    "/items": {
      "get": {
        "tags": ["Ítems"],
        "summary": "Obtener todos los ítems",
        "responses": {
          "200": {
            "description": "Lista de ítems",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_item": {
                        "type": "integer",
                        "example": 1
                      },
                      "id_tipo_decoracion": {
                        "type": "integer",
                        "example": 2
                      },
                      "nombre_item": {
                        "type": "string",
                        "example": "Espada brillante"
                      },
                      "descripcion": {
                        "type": "string",
                        "example": "Una espada especial"
                      },
                      "categoria_items": {
                        "type": "string",
                        "example": "arma"
                      },
                      "costo_monedas": {
                        "type": "integer",
                        "example": 100
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Ítems"],
        "summary": "Crear un nuevo ítem",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_tipo_decoracion": {
                    "type": "integer",
                    "example": 1
                  },
                  "nombre_item": {
                    "type": "string",
                    "example": "Espada brillante"
                  },
                  "descripcion": {
                    "type": "string",
                    "example": "Una espada especial"
                  },
                  "categoria_items": {
                    "type": "string",
                    "example": "arma"
                  },
                  "costo_monedas": {
                    "type": "integer",
                    "example": 100
                  }
                },
                "required": [
                  "id_tipo_decoracion",
                  "nombre_item",
                  "descripcion",
                  "categoria_items",
                  "costo_monedas"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ítem creado correctamente"
          },
          "400": {
            "description": "Datos incompletos o inválidos"
          },
          "500": {
            "description": "Error interno al crear el ítem"
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": ["Ítems"],
        "summary": "Obtener un ítem por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID del ítem a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Ítem encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_item": {
                      "type": "integer",
                      "example": 1
                    },
                    "id_tipo_decoracion": {
                      "type": "integer",
                      "example": 2
                    },
                    "nombre_item": {
                      "type": "string",
                      "example": "Espada brillante"
                    },
                    "descripcion": {
                      "type": "string",
                      "example": "Una espada especial"
                    },
                    "categoria_items": {
                      "type": "string",
                      "example": "arma"
                    },
                    "costo_monedas": {
                      "type": "integer",
                      "example": 100
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ítem no encontrado"
          },
          "500": {
            "description": "Error al obtener el ítem"
          }
        }
      }
    },
    "/estrategias_ensenanza": {
      "get": {
        "tags": ["Estrategias de Enseñanza"],
        "summary": "Obtener todas las estrategias de enseñanza",
        "responses": {
          "200": {
            "description": "Lista de estrategias",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_estrategia": { "type": "integer", "example": 1 },
                      "descripcion": {
                        "type": "string",
                        "example": "Aprendizaje visual con esquemas"
                      },
                      "estilo_asociado": {
                        "type": "string",
                        "example": "visual"
                      },
                      "id_tema": { "type": "integer", "example": 2 }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error al obtener las estrategias"
          }
        }
      },
      "post": {
        "tags": ["Estrategias de Enseñanza"],
        "summary": "Crear una nueva estrategia de enseñanza",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "descripcion": {
                    "type": "string",
                    "example": "Aprendizaje visual con esquemas"
                  },
                  "estilo_asociado": { "type": "string", "example": "visual" },
                  "id_tema": { "type": "integer", "example": 2 }
                },
                "required": ["descripcion", "estilo_asociado", "id_tema"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Estrategia registrada"
          },
          "400": {
            "description": "Datos incompletos o inválidos"
          },
          "500": {
            "description": "Error al registrar estrategia"
          }
        }
      }
    },
    "/estrategias_ensenanza/{id}": {
      "get": {
        "tags": ["Estrategias de Enseñanza"],
        "summary": "Obtener una estrategia por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estrategia encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_estrategia": { "type": "integer", "example": 1 },
                    "descripcion": {
                      "type": "string",
                      "example": "Aprendizaje visual con esquemas"
                    },
                    "estilo_asociado": {
                      "type": "string",
                      "example": "visual"
                    },
                    "id_tema": { "type": "integer", "example": 2 }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Estrategia no encontrada"
          },
          "500": {
            "description": "Error al obtener estrategia"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    { "name": "Usuarios" },
    { "name": "Grupos" },
    { "name": "Estudiantes" },
    { "name": "Actividades" },
    { "name": "Juegos" },
    { "name": "Métricas" },
    { "name": "Sesiones de Juego" },
    { "name": "Compras" },
    { "name": "Ítems" },
    { "name": "Estrategias de Enseñanza" }
  ]
}
